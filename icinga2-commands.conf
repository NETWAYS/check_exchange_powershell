object CheckCommand "powershell-base" {
    import "plugin-check-command"

    command = [
        "C:\\Windows\\sysnative\\WindowsPowerShell\\v1.0\\powershell.exe"
    ]

    timeout = 1m

    arguments += {
        "-command" = {
            value = "try { & '$powershell_script$'"
            order = -1
        }
        ARGS = {
            value = "$powershell_args$"
            skip_key = true
        }
        END = {
            value = "; exit $$LastExitCode } catch { Write-Host ('UNKNOWN: ' + $$error); exit 3 }"
            order = 999
            skip_key = true
        }
    }
}

object CheckCommand "netways/exchange_edge_synchronization" {
    import "plugin-check-command"
    import "powershell-base"

    vars.powershell_script = "C:\\Icinga2Exchange\\check_exchange_edge_synchronization.ps1"
}

object CheckCommand "netways/exchange_health" {
    import "plugin-check-command"
    import "powershell-base"

    arguments += {
        "-Server" = "$exchange_server$"
    }
    vars.powershell_script = "C:\\Icinga2Exchange\\check_exchange_health.ps1"
}

object CheckCommand "netways/exchange_mailbox_databases" {
    import "plugin-check-command"
    import "powershell-base"

    arguments += {
        "-RequireReplication" = {
            set_if = "$exchange_mailbox_databases_requirereplication$"
        }
    }
    vars.powershell_script = "C:\\Icinga2Exchange\\check_exchange_mailbox_databases.ps1"
}

object CheckCommand "netways/exchange_queues" {
    import "plugin-check-command"
    import "powershell-base"

    arguments += {
        "-MaxCritical" = "$exchange_queues_critical$"
        "-MaxDeferredCritical" = "$exchange_queues_deferred_critical$"
        "-MaxDeferredWarn" = "$exchange_queues_deferred_warning$"
        "-MaxLockedCritical" = "$exchange_queues_locked_critical$"
        "-MaxLockedWarn" = "$exchange_queues_locked_warning$"
        "-MaxWarn" = "$exchange_queues_warning$"
        "-Server" = "$exchange_server$"
    }
    vars.powershell_script = "C:\\Icinga2Exchange\\check_exchange_queues.ps1"
}

object CheckCommand "netways/exchange_webservices" {
    import "plugin-check-command"
    import "powershell-base"

    arguments += {
        "-ClientAccessServer" = "$exchange_server$"
        "-MaxCrit" = "$exchange_webservices_maxcrit$"
        "-MaxWarn" = "$exchange_webservices_maxwarn$"
        "-TrustAnySSLCertificate" = {
            set_if = "$exchange_trustanyssl$"
        }
    }
    vars.powershell_script = "C:\\Icinga2Exchange\\check_exchange_webservices.ps1"
}
